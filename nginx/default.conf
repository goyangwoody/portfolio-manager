# 1) HTTP: ACME 챌린지만 서빙, 나머지는 HTTPS로 리다이렉트
server {
    listen 80;
    server_name thenextbuffetts.com www.thenextbuffetts.com;

    # certbot webroot (compose에서 ./certbot/www → /var/www/certbot 로 마운트)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 그 외 모든 요청은 HTTPS로 영구 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

# 2) HTTPS: 실제 서비스(정적 + /api 프록시 + SPA)
server {
    listen 443 ssl http2;
    server_name thenextbuffetts.com www.thenextbuffetts.com;

    # certbot이 발급한 인증서 경로 (도메인에 맞춰 수정)
    #ssl_certificate     /etc/letsencrypt/live/thenextbuffetts.com/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/thenextbuffetts.com/privkey.pem;

    # (권장) 기본 TLS 설정
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1d;

    # 프론트 정적 파일 (compose에서 ./web_build → /usr/share/nginx/html 로 마운트)
    root  /usr/share/nginx/html;
    index index.html;

    # 백엔드 API 프록시
    # 슬래시(/) 일관 유지: location /api/  + proxy_pass .../
    location /api/ {
        proxy_pass http://api:8000/;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 대비
        proxy_http_version 1.1;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";

        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }

    # SPA 라우팅: 파일이 없으면 index.html 서빙
    location / {
        try_files $uri /index.html;
    }

    client_max_body_size 20m;

    # (선택) 정적 캐싱
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        expires 7d;
        access_log off;
    }
}
